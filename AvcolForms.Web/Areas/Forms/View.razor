@attribute [Authorize]
@inject UserManager<ApplicationUser> _userManager;
@inject IDbContextFactory<ApplicationDbContext> _factory;
@using AvcolForms.Core.Components.Forms;
@inject NavigationManager _navManager;

@if (_firstLoading){
    <PageTitle>Loading Form ...</PageTitle>
    <MudProgressCircular Indeterminate="true"></MudProgressCircular>
}
else {
    <PageTitle>@AppForm.Title</PageTitle>

    <MudBreadcrumbs Items="@_items"></MudBreadcrumbs>

    <MudText Typo="Typo.h3" Align="Align.Center">@AppForm.Title</MudText>

    <EditForm Model="@Response" OnInvalidSubmit="@CreateAsync">
    <DataAnnotationsValidator/>

    @if (AppForm.Content is not null && AppForm.Content.Any())
    {
        @foreach (var item in AppForm.Content)
        {
            <FormContentComponent Content="@item" />
        }
    }
    else
    {
        <MudAlert Severity="Severity.Warning">This form contains no elements to respond to!</MudAlert>
    }

    <LineBreak Count="2"/>

    <MudAlert Severity="Severity.Info">Close Off: @AppForm.Closes.ToLocalTimeOrNone()</MudAlert>

    <LineBreak Count="2"/>

    <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto">Submit</MudButton>

    </EditForm>

    <LineBreak Count="5"/>
}

<LineBreak Count="10"/>